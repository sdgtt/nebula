Search.setIndex({"docnames": ["cli", "core/nebula", "core/nebula.builder", "core/nebula.common", "core/nebula.coverage", "core/nebula.cyberpower", "core/nebula.downloader", "core/nebula.driver", "core/nebula.errors", "core/nebula.helper", "core/nebula.jtag", "core/nebula.main", "core/nebula.manager", "core/nebula.netbox", "core/nebula.netconsole", "core/nebula.network", "core/nebula.pdu", "core/nebula.tasks", "core/nebula.tftpboot", "core/nebula.uart", "core/nebula.usbdev", "core/nebula.usbmux", "examples", "examples/kernel_coverage", "flow", "hw_devs", "index", "pytest", "tests/driver", "tests/index", "tests/os", "yml"], "filenames": ["cli.rst", "core/nebula.rst", "core/nebula.builder.rst", "core/nebula.common.rst", "core/nebula.coverage.rst", "core/nebula.cyberpower.rst", "core/nebula.downloader.rst", "core/nebula.driver.rst", "core/nebula.errors.rst", "core/nebula.helper.rst", "core/nebula.jtag.rst", "core/nebula.main.rst", "core/nebula.manager.rst", "core/nebula.netbox.rst", "core/nebula.netconsole.rst", "core/nebula.network.rst", "core/nebula.pdu.rst", "core/nebula.tasks.rst", "core/nebula.tftpboot.rst", "core/nebula.uart.rst", "core/nebula.usbdev.rst", "core/nebula.usbmux.rst", "examples.rst", "examples/kernel_coverage.rst", "flow.rst", "hw_devs.rst", "index.rst", "pytest.rst", "tests/driver.rst", "tests/index.rst", "tests/os.rst", "yml.rst"], "titles": ["Command-Line", "nebula package", "nebula.builder module", "nebula.common module", "nebula.coverage module", "nebula.cyberpower module", "nebula.downloader module", "nebula.driver module", "nebula.errors module", "nebula.helper module", "nebula.jtag module", "nebula.main module", "nebula.manager module", "nebula.netbox module", "nebula.netconsole module", "nebula.network module", "nebula.pdu module", "nebula.tasks module", "nebula.tftpboot module", "nebula.uart module", "nebula.usbdev module", "usbmux", "Examples", "Kernel Coverage Testing", "Managers", "Hardware Specific Configurations", "Welcome to nebula\u2019s documentation!", "pytest", "Driver Tests", "Built-In Tests", "Operating System Tests", "Configuration"], "terms": {"invok": [0, 26], "style": 0, "task": [0, 1, 26], "nebula": [0, 21, 23, 25, 27, 31], "": [0, 15, 23], "cli": [0, 23, 25, 26, 31], "subcommand": 0, "gen": [0, 31], "config": [0, 3, 8, 9, 21, 27, 31], "gener": [0, 4, 22, 26], "yaml": [0, 3, 31], "configur": [0, 21, 23, 26], "interact": [0, 10, 31], "show": 0, "log": [0, 14, 15, 17, 19, 22, 31], "all": [0, 7, 23, 24], "follow": [0, 10, 25, 31], "updat": [0, 8, 9, 15, 19, 21, 23], "read": [0, 19], "field": [0, 9, 13], "exist": [0, 9, 15, 24, 26, 31], "file": [0, 3, 6, 8, 9, 12, 15, 19, 21, 23, 24, 26, 31], "build": [0, 4, 6, 19, 22, 26], "repo": [0, 2], "clone": [0, 25], "git": [0, 25], "project": [0, 2, 9, 26], "coverag": [0, 1, 22, 26], "kernel": [0, 8, 19, 21, 22, 24, 26, 31], "collect": [0, 4, 22], "dut": [0, 13, 19, 21, 23], "gcov": [0, 4, 23], "html": [0, 22], "report": [0, 4, 15, 22], "requir": [0, 24, 31], "lcov": [0, 4, 23], "instal": [0, 23, 25], "local": [0, 31], "dl": 0, "bootfil": [0, 6, 9, 18, 31], "specif": [0, 19, 23, 24, 26, 31], "develop": [0, 24, 25, 26, 31], "system": [0, 6, 7, 19, 21, 26, 29, 31], "sdcard": [0, 12, 18], "verifi": [0, 7], "decompress": 0, "sd": [0, 6, 19, 21, 26], "card": [0, 6, 15, 19, 21, 25], "imag": [0, 19, 21, 23], "check": [0, 1, 6, 15, 29], "iio": [0, 7], "devic": [0, 8, 13, 20, 21, 24, 25, 31], "appear": [0, 7, 19], "expect": [0, 5, 7], "support": [0, 23, 26], "board": [0, 2, 4, 8, 10, 12, 15, 16, 21, 24, 25, 27, 31], "print": [0, 19, 27], "out": [0, 6, 31], "list": [0, 6, 13, 21], "design": [0, 6, 24, 26, 31], "name": [0, 6, 8, 13, 17, 21, 31], "reboot": [0, 15], "us": [0, 6, 15, 19, 23, 25, 26, 27, 31], "boot": [0, 1, 6, 8, 10, 12, 15, 18, 19, 21, 23, 26], "through": [0, 5, 21, 25, 26, 27, 31], "u": [0, 8, 10], "menu": [0, 8, 19], "assum": 0, "i": [0, 5, 6, 7, 8, 9, 17, 19, 23, 24, 25, 26, 31], "run": [0, 15, 19, 23, 25, 31], "recoveri": 0, "recov": [0, 12], "mani": [0, 24], "method": [0, 6, 21, 25], "net": [0, 14], "dmesg": [0, 15], "pars": [0, 15], "remot": [0, 4, 6, 15, 23], "restart": 0, "over": [0, 15, 19, 31], "ip": [0, 5, 6, 7, 13, 19, 23, 31], "ssh": [0, 8, 15], "power": [0, 5, 16, 21, 31], "cycl": [0, 16], "get": [0, 6, 21, 23], "carriernam": 0, "carrier": 0, "fpga": [0, 6, 13], "from": [0, 4, 6, 10, 12, 15, 19, 21, 23, 26], "connect": [0, 21, 25], "mezzanin": 0, "fmc": [0, 6, 19], "linux": [0, 4, 6, 8, 26, 31], "access": [0, 25], "set": [0, 5, 21, 31], "dhcp": [0, 15, 19], "nic": [0, 15, 19], "usbdev": [0, 1], "virtual": 0, "creat": [0, 6, 23], "base": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "found": [0, 8, 15], "mac": [0, 19], "static": 0, "address": [0, 4, 5, 9, 19, 31], "usag": 0, "core": [0, 24, 29], "opt": 0, "other": [0, 5, 8, 24], "here": [0, 25], "docstr": 0, "option": [0, 6, 21, 31], "none": [0, 2, 3, 6, 7, 9, 10, 12, 13, 15, 16, 18, 19, 21], "l": [0, 25], "string": [0, 15, 19], "default": [0, 6, 19, 21, 23], "debug": 0, "b": 0, "f": 0, "section": [0, 9, 31], "v": 0, "valu": 0, "new": 0, "If": [0, 17, 25, 31], "given": [0, 29], "onli": [0, 6, 19, 23, 31], "y": [0, 23], "yamlfilenam": [0, 6, 7, 10, 13, 15, 16, 18, 19, 21], "path": [0, 6, 21, 23], "os_specif": 0, "bootbinpath": [0, 12, 15], "bin": [0, 8, 18, 19, 21], "d": [0, 13, 21, 25], "devtreepath": [0, 12, 15], "devicetre": [0, 19, 21, 25], "folder": [0, 6, 12, 21, 23], "resourc": [0, 31], "contain": [0, 9, 15], "tree": [0, 24], "system_top": [0, 19], "bit": [0, 19, 31], "overrid": 0, "o": [0, 19, 23, 29], "uimagepath": [0, 12, 15], "etc": [0, 25], "ex": [0, 6], "zynq": [0, 2, 15, 18, 31], "zc706": [0, 15, 31], "adv7511": [0, 15, 18, 31], "fmcdaq2": [0, 15, 31], "multi": [0, 8], "c": 0, "No": 0, "argument": [0, 19], "refer": [0, 15, 19], "obtain": 0, "dev": [0, 6, 9, 19, 21, 25, 31], "ttyacmo": 0, "provid": [0, 29], "auto": [0, 31], "n": [0, 23], "interfac": [0, 1, 13, 14, 19, 24, 26, 31], "eth0": [0, 19], "r": 0, "consol": [0, 14, 19, 31], "fals": [0, 5, 6, 12, 13, 15, 17, 18, 19, 31], "filenam": [0, 3, 6, 17, 19, 20, 21, 31], "three": 0, "produc": 0, "full": 0, "dmesg_err": 0, "error": [0, 1, 15], "dmesg_warn": 0, "warn": 0, "p": 0, "password": [0, 4, 16], "analog": [0, 4, 6, 7], "user": 0, "usernam": [0, 4, 16], "root": [0, 4, 6, 18, 19, 21, 31], "m": [0, 27], "branch": [0, 2, 6], "relat": [0, 6], "It": [0, 25], "can": [0, 6, 23, 24, 25, 31], "hdl": [0, 6], "partit": [0, 15, 21], "For": [0, 6, 15, 23, 26, 31], "linx": 0, "enterstr": 0, "linuxbranch": 0, "hdlbranch": 0, "enter": 0, "boot_partit": [0, 6], "bootpartitionbranch": 0, "thi": [0, 5, 6, 10, 15, 19, 21, 23, 25, 31], "http": [0, 6, 25], "artifactori": [0, 6], "sourc": [0, 6, 21], "master": [0, 2, 6], "firmwar": [0, 6], "pluto": [0, 19], "github": [0, 25], "releas": [0, 1, 6], "must": [0, 8, 15, 23, 25], "m2k": [0, 19], "locat": [0, 6, 21, 25, 31], "depend": [0, 6], "domain": [0, 6], "ar": [0, 21, 23, 25, 26, 29, 31], "local_f": [0, 6], "2019_r1": [0, 6], "servic": [0, 18], "pduip": [0, 16, 31], "outlet": [0, 5, 16, 31], "index": [0, 26], "which": [0, 5, 15, 23, 25, 31], "pdutyp": 0, "type": [0, 6, 31], "current": [0, 12, 21, 29], "cyberpow": [0, 1, 31], "vesync": [0, 31], "board_nam": [0, 3, 6, 7, 9, 10, 12, 13, 15, 16, 18, 19, 21], "custom": 0, "vivado": 0, "settings64": 0, "when": [0, 23, 25], "ignor": 0, "version": [0, 23], "2019": 0, "1": [0, 5, 15, 31], "filter": [0, 1, 9, 13, 17], "substr": 0, "except": [0, 5, 7, 8, 15, 31], "rais": [0, 7, 15], "otherwis": [0, 7, 15, 17, 25], "uri": [0, 7], "iiod": 0, "builder": 1, "add_vivado_path": [1, 2], "analog_build_bootbin": [1, 2], "analog_clon": [1, 2], "analog_clone_build": [1, 2], "build_atf": [1, 2], "build_bootbin": [1, 2], "build_fsbl": [1, 2], "build_pmufw": [1, 2], "build_repo": [1, 2], "build_zmp_fsbl": [1, 2], "cmake_build": [1, 2], "create_fsbl_project": [1, 2], "create_pmufw_project": [1, 2], "create_zmp_fsbl_project": [1, 2], "create_zynq_bif": [1, 2], "create_zynqmp_bif": [1, 2], "def_config_map": [1, 2], "hdl_build": [1, 2], "linux_build": [1, 2], "linux_tools_map": [1, 2], "shell_out": [1, 2], "shell_out2": [1, 2, 20], "uboot_build": [1, 2], "vivado_overrid": [1, 2], "common": [1, 26], "multi_device_check": [1, 3], "util": [1, 3, 6, 7, 10, 13, 15, 16, 18, 19, 21, 26], "update_defaults_from_yaml": [1, 3], "collect_gcov_track": [1, 4], "gen_lcov_html_report": [1, 4], "cyberpowerpdu": [1, 5], "outlet_state_oid": [1, 5], "set_outlet_on": [1, 5], "cyberpowerpduexcept": [1, 5], "download": [1, 15, 26, 31], "convert_to_datetim": [1, 6], "download_artifact": [1, 6], "download_matlab_generate_bootbin": [1, 6], "download_boot_fil": [1, 6], "download_sdcard_releas": [1, 6], "extract": [1, 6, 9], "retry_sess": [1, 6], "filter_board": [1, 6], "gen_url": [1, 6], "generate_bootbin_map_fil": [1, 6], "get_artifact_path": [1, 6], "get_firmware_vers": [1, 6], "get_gitsha": [1, 6], "get_info_txt": [1, 6], "get_latest_releas": [1, 6], "get_newest_fold": [1, 6], "interpret_bootbin": [1, 6], "listfd": [1, 6], "list_files_in_remote_fold": [1, 6], "sanitize_artifactory_url": [1, 6], "translate_to_reference_design_nam": [1, 6], "driver": [1, 23, 24, 26, 29, 31], "check_iio_context": [1, 7], "check_iio_devic": [1, 7], "run_all_check": [1, 7], "linuxnotfunctionalafterbootfileupd": [1, 8], "linuxnotreach": [1, 8], "multidevfound": [1, 8], "networknotfunct": [1, 8], "networknotfunctionalafterbootfileupd": [1, 8], "pingfailedafterreboot": [1, 8], "ssherror": [1, 8], "sshnotfunctionalafterbootfileupd": [1, 8], "ubootnotreach": [1, 8], "helper": [1, 21], "convert_address_to_tti": [1, 9], "convert_by_id_to_tti": [1, 9], "get_nic": [1, 9], "get_uart": [1, 9], "create_config_from_netbox": [1, 9], "create_config_interact": [1, 9], "get_boot_files_from_descriptor": [1, 9], "list_supported_board": [1, 9], "update_yaml": [1, 9], "project_filt": [1, 9], "jtag": [1, 26, 31], "boot_to_uboot": [1, 10], "full_boot": [1, 10], "load_post_uboot_fil": [1, 10], "restart_board": [1, 10], "run_xsdb": [1, 10], "target_set_str": [1, 10], "tcl_errors_recov": [1, 10], "main": [1, 23, 25, 26, 31], "manag": [1, 4, 16, 21, 25, 26, 27], "board_reboot": [1, 12], "board_reboot_auto": [1, 12], "board_reboot_auto_fold": [1, 12], "board_reboot_jtag_uart": [1, 12], "board_reboot_sdmux_pdu": [1, 12], "board_reboot_uart_net_pdu": [1, 12], "copy_reference_from_sdcard": [1, 12], "get_statu": [1, 12, 13], "load_boot_bin": [1, 12], "network_check": [1, 12], "power_cycle_to_boot": [1, 12], "recover_board": [1, 12], "run_test": [1, 12], "shutdown_powerdown_board": [1, 12], "verify_checksum": [1, 12, 15], "netbox": 1, "netboxdevic": [1, 13], "disabl": [1, 13], "enabl": [1, 13, 19, 23, 26], "statu": [1, 13, 15], "to_config": [1, 13], "write_journ": [1, 13], "generate_config": [1, 13], "get_devices_nam": [1, 13], "ddepth": [1, 13], "add_tag": [1, 13], "get_chidren_devic": [1, 13], "get_clust": [1, 13], "get_console_port": [1, 13], "get_devic": [1, 13], "get_device_bai": [1, 13], "get_device_rol": [1, 13], "get_device_typ": [1, 13], "get_interfac": [1, 13], "get_inventory_item": [1, 13], "get_ip_address": [1, 13, 19], "get_mac_from_asset_tag": [1, 13], "get_parent_devic": [1, 13], "get_power_outlet": [1, 13], "get_power_port": [1, 13], "get_tag": [1, 13], "get_user_from_token": [1, 13], "log_journ": [1, 13], "remove_tag": [1, 13], "update_devic": [1, 13], "update_statu": [1, 13], "obj_dic": [1, 13], "todict": [1, 13], "netconsol": [1, 31], "listen": [1, 14], "start_log": [1, 14, 19], "stop_log": [1, 14, 19], "network": [1, 5, 14, 24, 26, 31], "check_board_boot": [1, 15], "check_dmesg": [1, 15], "check_ssh": [1, 15], "copy_file_to_remot": [1, 15], "ping_board": [1, 15], "reboot_board": [1, 15], "run_diagnost": [1, 15], "run_ssh_command": [1, 15], "update_boot_partit": [1, 15], "update_boot_partition_existing_fil": [1, 15], "pdu": [1, 5, 26, 31], "power_cycle_board": [1, 16], "power_down_board": [1, 16], "power_up_board": [1, 16], "myfilt": [1, 17], "load_yaml": [1, 17], "tftpboot": [1, 6, 31], "check_servic": [1, 18], "start_servic": [1, 18], "update_boot_fil": [1, 18], "uart": [1, 12, 24, 26, 31], "escape_ansi": [1, 19], "copy_refer": [1, 19], "get_local_mac_usbdev": [1, 19], "get_uart_boot_messag": [1, 19], "get_uart_command_for_linux": [1, 19], "is_open": [1, 19], "load_system_uart": [1, 19], "load_system_uart_copy_to_sdcard": [1, 19], "load_system_uart_from_tftp": [1, 19], "pipe_to_log_fil": [1, 19], "reinitialize_uart": [1, 19], "request_ip_dhcp": [1, 19], "set_ip_stat": [1, 19], "update_boot_arg": [1, 19], "update_boot_files_from_run": [1, 19], "update_dev_tre": [1, 19], "update_fpga": [1, 19], "update_kernel": [1, 19], "update_firmwar": [1, 20], "wait_for_usb_mount": [1, 20], "usbmux": [1, 25], "backup_files_to_extern": [1, 21], "find_mux_devic": [1, 21], "find_muxed_sdcard": [1, 21], "get_mux_mod": [1, 21], "search_path": [1, 21], "set_mux_mod": [1, 21], "target_mux": [1, 21], "update_boot_files_from_extern": [1, 21], "update_boot_files_from_sdcard_itself": [1, 21], "update_devicetree_for_mux": [1, 21, 25], "update_rootfs_files_from_extern": [1, 21], "write_img_file_to_sdcard": [1, 21], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 31], "object": [2, 3, 4, 5, 9, 12, 13, 14, 20], "dir": [2, 4, 18], "hdl_branch": 2, "hdl_2018_r2": 2, "uboot_branch": 2, "xilinx": 2, "v2018": 2, "2": [2, 5, 10, 31], "zed": [2, 18], "fmcomms2": [2, 18, 19], "githuborg": 2, "analogdevicesinc": 2, "def_config": 2, "build_dir": 2, "archbg": 2, "hdf_filenam": 2, "2018_r2": 2, "cmd": [2, 10, 19], "script": [2, 20], "confignam": 3, "attr": 3, "process": 3, "192": [4, 31], "168": [4, 31], "86": [4, 31], "33": 4, "test": [4, 5, 22, 24, 26, 27], "trace": [4, 23], "linux_build_dir": [4, 23], "host": [5, 19, 21], "queri": 5, "control": [5, 21, 25], "via": 5, "snmp": 5, "pdu15swhviec8fnet": 5, "don": 5, "t": 5, "understand": 5, "well": [5, 19], "enough": 5, "have": [5, 23, 31], "ani": [5, 15, 31], "idea": 5, "would": [5, 31], "work": [5, 8, 9, 15], "model": [5, 13], "basic": [5, 29], "just": 5, "piec": 5, "copi": 5, "past": 5, "pysnmp": 5, "code": 5, "depositori": 5, "comment": [5, 13], "paramet": [5, 6, 31], "str": [5, 21], "hostnam": 5, "cancelpendingcommand": 5, "7": 5, "delayedoff": 5, "5": [5, 16], "delayedon": 5, "4": 5, "delayedreboot": 5, "6": 5, "immediateoff": 5, "immediateon": 5, "immediatereboot": 5, "3": [5, 6, 10, 18], "outletidentifi": 5, "8": 5, "an": [5, 21, 25, 31], "off": [5, 16, 21], "my": 5, "rang": 5, "invalid": 5, "atm": 5, "true": [5, 13, 15, 17, 19, 27], "mean": 5, "turn": 5, "date": 6, "output_fold": 6, "toolbox": 6, "target_fmc": 6, "target_fpga": 6, "download_fold": 6, "skip_download": 6, "http_server_ip": 6, "fname": 6, "ref": 6, "url": 6, "design_nam": [6, 12], "source_root": 6, "var": [6, 18], "lib": [6, 18], "noo": 6, "microblaz": 6, "rpi": 6, "url_templ": 6, "target": [6, 12, 19, 21, 26], "move": [6, 18], "differ": 6, "specifi": [6, 8, 15, 17, 21, 23], "same": 6, "server": [6, 19, 31], "com": [6, 19, 25], "return": [6, 13, 15, 17], "A": 6, "innam": 6, "outnam": 6, "retri": [6, 15], "backoff_factor": 6, "0": [6, 15], "status_forcelist": 6, "429": 6, "500": 6, "502": 6, "504": 6, "session": [6, 27], "addl": 6, "bootbin_dir": 6, "ext": 6, "link": [6, 23], "daili": 6, "build_info": 6, "iio_device_nam": [7, 31], "did": 8, "correctli": [8, 23, 25], "after": [8, 27], "inaccess": 8, "like": 8, "previou": 8, "bad": 8, "crash": 8, "function": [8, 15, 26, 31], "ethernet": [8, 31], "broken": 8, "cabl": 8, "disconnect": 8, "ping": [8, 15], "fail": [8, 13], "transact": 8, "doe": [8, 31], "reachabl": 8, "translat": 9, "frandom": 9, "serial": [9, 19], "id": [9, 13, 25], "usb": [9, 21, 26], "silicon_labs_cp2103_usb_to_uart_bridge_controller_0001": 9, "if00": 9, "port0": 9, "ttyusb1": 9, "Will": 9, "also": 9, "by_path": 9, "docker": 9, "by_id": 9, "outfil": 9, "netbox_ip": 9, "localhost": [9, 13], "netbox_port": 9, "netbox_baseurl": 9, "netbox_token": 9, "jenkins_ag": 9, "include_vari": [9, 13], "include_children": [9, 13], "devices_statu": 9, "devices_rol": 9, "devices_tag": 9, "templat": [9, 13], "descriptor_fil": 9, "defin": [9, 31], "kuiper": [9, 21], "desctriptor": 9, "e": [9, 23], "json": [9, 21], "configfilenam": [9, 12, 27], "new_valu": 9, "singl": [9, 23, 24], "project_dict": 9, "vivado_vers": [10, 12], "2021": 10, "custom_vivado_path": 10, "jtag_cable_id": 10, "jtag_cpu_target_nam": 10, "jtag_connect_retri": 10, "fsblpath": 10, "fsbl": 10, "elf": 10, "ubootpath": 10, "reset": 10, "load": [10, 12, 19, 24], "up": [10, 24, 27], "uboot": [10, 19, 26], "should": [10, 17, 25], "stop": [10, 14, 19], "target_nam": 10, "monitor_typ": 12, "extra": 12, "system_top_bit_path": 12, "extlinux_path": [12, 15], "scr_path": [12, 15], "preloader_path": [12, 15], "automat": [12, 25], "select": [12, 23, 24], "mechan": [12, 23], "setup": [12, 25], "jtag_mod": 12, "find": [12, 21, 31], "arg": [12, 21], "kwarg": 12, "netbox_interfac": 13, "device_nam": 13, "dtype": 13, "variant": 13, "reason": 13, "kind": 13, "info": [13, 26], "autom": [13, 26], "journal": 13, "entri": 13, "ni": 13, "children": 13, "activ": [13, 15], "role": 13, "agent": 13, "tag": 13, "depth": 13, "dictionari": 13, "port": [13, 14], "8000": 13, "token": 13, "0123456789abcdef0123456789abcdef01234567": 13, "base_url": 13, "load_config": 13, "device_id": 13, "parent_id": 13, "role_id": 13, "slug": 13, "asset_tag": 13, "author_id": 13, "convert": 13, "obj": 13, "classkei": 13, "23456": 14, "logfilenam": [14, 19, 31], "txt": [14, 21], "trigger": [14, 19], "monitor": [14, 19, 23, 31], "dutip": [15, 31], "dutusernam": 15, "dutpassword": 15, "nicip": 15, "ha": [15, 31], "failur": [15, 24, 31], "error_on_warn": 15, "dmesg_log": 15, "its": 15, "possibl": [15, 26], "command": [15, 19, 25, 26, 31], "non": 15, "src": 15, "dest": 15, "tri": 15, "10": [15, 31], "receiv": 15, "zero": 15, "bypass_sleep": 15, "execut": 15, "adi_diagnost": 15, "ignore_except": 15, "show_log": 15, "print_result_to_fil": 15, "subfold": [15, 21], "you": [15, 25, 31], "exampl": [15, 23, 26, 31], "file_path": 15, "algo": 15, "sha256": 15, "pdu_typ": [16, 31], "distribut": [16, 31], "wait": [16, 19], "second": [16, 19, 31], "ON": 16, "down": [16, 21, 24, 27], "On": 16, "record": 17, "determin": 17, "deem": 17, "appropri": 17, "mai": [17, 31], "modifi": [17, 31], "place": [17, 21], "boot_files_shar": 18, "default_target": 18, "ad9361": 18, "reference_fil": 18, "tftp": [18, 19, 31], "uimag": 18, "devtre": [18, 19], "tftpserver": 18, "share": [18, 31], "line": [19, 26, 31], "tftpserverip": [19, 31], "baudrat": [19, 31], "115200": [19, 31], "bootarg": [19, 31], "ttyps0": [19, 31], "mmcblk0p2": [19, 31], "rw": [19, 31], "earlycon": [19, 31], "earlyprintk": 19, "rootfstyp": [19, 31], "ext4": [19, 31], "rootwait": [19, 31], "period": 19, "30": 19, "handler": 19, "send": 19, "done": [19, 26, 31], "thread": 19, "so": [19, 23], "block": [19, 31], "descriptor": [19, 31], "save": 19, "output": [19, 31], "per": [19, 31], "print_to_consol": 19, "org": [19, 23], "done_str": 19, "enumer": 19, "messag": 19, "findstr": 19, "write": [19, 21], "system_top_bit_filenam": 19, "devtree_filenam": 19, "kernel_filenam": 19, "complet": [19, 23, 31], "bitstream": [19, 24, 26], "dure": [19, 31], "xmodem": 19, "bootbin": 19, "data": 19, "logappend": 19, "forc": 19, "transfter": 19, "skip_tftpload": 19, "plutosdr": 20, "mux": [21, 26], "destin": 21, "backup": 21, "extern": [21, 31], "either": 21, "directori": [21, 23, 31], "under": [21, 25], "random": 21, "itself": 21, "befor": [21, 27], "call": [21, 23], "pleas": 21, "THE": 21, "mode": [21, 24, 31], "The": [21, 23, 24, 25, 26], "bootbin_loc": 21, "kernel_loc": 21, "devicetree_loc": 21, "devicetree_overlay_loc": 21, "devicetree_overlay_config_loc": 21, "extlinux_loc": 21, "scr_loc": 21, "preloader_loc": 21, "outsid": 21, "overlai": 21, "devicetree_overlay_config": 21, "written": 21, "extlinux": 21, "intel": 21, "scr": 21, "preload": 21, "sfp": 21, "descriptor_path": 21, "devicetree_filenam": 21, "dtb": 21, "img_filenam": 21, "explain": 23, "how": [23, 25], "built": [23, 26], "certain": [23, 31], "makefil": 23, "doc": [23, 25], "look": 23, "In": [23, 26], "short": 23, "config_debug_f": 23, "config_gcov_kernel": 23, "gcc": 23, "format": 23, "autodetect": 23, "config_gcov_format_autodetect": 23, "To": [23, 25], "necessari": [23, 25], "g": 23, "gcov_profile_main": 23, "one": 23, "gcov_profil": 23, "exclud": 23, "being": 23, "profil": 23, "even": 23, "config_gcov_profile_al": 23, "compil": 23, "modul": [23, 26], "onc": 23, "been": 23, "api": 23, "wa": 23, "leverag": 24, "underli": 24, "pdf": 24, "togeth": 24, "effect": 24, "state": [24, 27], "sinc": [24, 25, 31], "some": [24, 25, 29, 31], "case": [24, 25], "handl": [24, 25], "bring": [24, 27], "matter": 24, "caus": [24, 31], "below": [24, 31], "logic": 24, "readi": 24, "sometim": 25, "compon": 25, "page": [25, 26], "discuss": 25, "awesom": 25, "tool": 25, "recommend": 25, "first": 25, "udev": 25, "rule": 25, "make": [25, 26], "referenc": 25, "easier": 25, "do": [25, 31], "pengutronix": 25, "usbsdmux": 25, "cd": 25, "sudo": 25, "cp": 25, "contrib": 25, "99": 25, "udevadm": 25, "reload": 25, "now": 25, "sysf": 25, "000000001143": 25, "want": [25, 31], "manual": 25, "document": [25, 31], "adjust": 25, "recogn": 25, "mount": 25, "rootf": 25, "ad": 25, "mmc": 25, "ff160000": 25, "ff170000": 25, "node": 25, "librari": 26, "aid": 26, "embed": 26, "platform": [26, 29], "infrastructur": 26, "orchestr": 26, "desktop": 26, "standard": 26, "ci": 26, "major": 26, "pure": 26, "python": 26, "reli": 26, "packag": 26, "cross": 26, "There": 26, "two": 26, "complement": 26, "deploy": 26, "top": 26, "simplifi": 26, "typic": 26, "deploi": 26, "flow": 26, "level": [26, 29], "pytest": 26, "hardwar": [26, 31], "oper": [26, 29], "submodul": 26, "search": 26, "fixtur": 27, "import": 27, "scope": 27, "autous": 27, "def": 27, "load_boot_fil": 27, "request": 27, "cfg": 27, "getopt": 27, "start_test": 27, "yield": 27, "put": 27, "good": 27, "stop_test": 27, "valid": 29, "focus": 29, "around": 29, "libiio": 29, "jesd": 29, "fill": 31, "thei": 31, "time": 31, "unless": 31, "Not": 31, "limit": 31, "each": 31, "tftpserverroot": 31, "allow": 31, "reference_boot_fold": 31, "hdl_folder": 31, "daq2_zc706": 31, "ad7291": 31, "ad9523": 31, "axi": 31, "ad9680": 31, "hpc": 31, "ad9144": 31, "ttyusb0": 31, "try": 31, "daq2": 31, "unit": 31, "35": 31, "number": 31, "appli": 31, "convent": 31, "classnam": 31, "therefor": 31, "properti": 31, "initi": 31, "chang": 31, "your": 31, "within": 31, "avoid": 31, "behavior": 31}, "objects": {"": [[1, 0, 0, "-", "nebula"]], "nebula": [[2, 0, 0, "-", "builder"], [3, 0, 0, "-", "common"], [4, 0, 0, "-", "coverage"], [5, 0, 0, "-", "cyberpower"], [6, 0, 0, "-", "downloader"], [7, 0, 0, "-", "driver"], [8, 0, 0, "-", "errors"], [9, 0, 0, "-", "helper"], [10, 0, 0, "-", "jtag"], [11, 0, 0, "-", "main"], [12, 0, 0, "-", "manager"], [13, 0, 0, "-", "netbox"], [14, 0, 0, "-", "netconsole"], [15, 0, 0, "-", "network"], [16, 0, 0, "-", "pdu"], [17, 0, 0, "-", "tasks"], [18, 0, 0, "-", "tftpboot"], [19, 0, 0, "-", "uart"], [20, 0, 0, "-", "usbdev"], [21, 0, 0, "-", "usbmux"]], "nebula.builder": [[2, 1, 1, "", "builder"]], "nebula.builder.builder": [[2, 2, 1, "", "add_vivado_path"], [2, 2, 1, "", "analog_build_bootbin"], [2, 2, 1, "", "analog_clone"], [2, 2, 1, "", "analog_clone_build"], [2, 2, 1, "", "build_atf"], [2, 2, 1, "", "build_bootbin"], [2, 2, 1, "", "build_fsbl"], [2, 2, 1, "", "build_pmufw"], [2, 2, 1, "", "build_repo"], [2, 2, 1, "", "build_zmp_fsbl"], [2, 2, 1, "", "cmake_build"], [2, 2, 1, "", "create_fsbl_project"], [2, 2, 1, "", "create_pmufw_project"], [2, 2, 1, "", "create_zmp_fsbl_project"], [2, 2, 1, "", "create_zynq_bif"], [2, 2, 1, "", "create_zynqmp_bif"], [2, 2, 1, "", "def_config_map"], [2, 2, 1, "", "hdl_build"], [2, 2, 1, "", "linux_build"], [2, 2, 1, "", "linux_tools_map"], [2, 2, 1, "", "shell_out"], [2, 2, 1, "", "shell_out2"], [2, 2, 1, "", "uboot_build"], [2, 3, 1, "", "vivado_override"]], "nebula.common": [[3, 4, 1, "", "multi_device_check"], [3, 1, 1, "", "utils"]], "nebula.common.utils": [[3, 2, 1, "", "update_defaults_from_yaml"]], "nebula.coverage": [[4, 1, 1, "", "coverage"]], "nebula.coverage.coverage": [[4, 2, 1, "", "collect_gcov_trackers"], [4, 2, 1, "", "gen_lcov_html_report"]], "nebula.cyberpower": [[5, 1, 1, "", "CyberPowerPdu"], [5, 5, 1, "", "CyberPowerPduException"]], "nebula.cyberpower.CyberPowerPdu": [[5, 3, 1, "", "outlet_state_oids"], [5, 2, 1, "", "set_outlet_on"]], "nebula.downloader": [[6, 4, 1, "", "convert_to_datetime"], [6, 4, 1, "", "download_artifact"], [6, 4, 1, "", "download_matlab_generate_bootbin"], [6, 1, 1, "", "downloader"], [6, 4, 1, "", "filter_boards"], [6, 4, 1, "", "gen_url"], [6, 4, 1, "", "generate_bootbin_map_file"], [6, 4, 1, "", "get_artifact_paths"], [6, 4, 1, "", "get_firmware_version"], [6, 4, 1, "", "get_gitsha"], [6, 4, 1, "", "get_info_txt"], [6, 4, 1, "", "get_latest_release"], [6, 4, 1, "", "get_newest_folder"], [6, 4, 1, "", "interpret_bootbin"], [6, 4, 1, "", "listFD"], [6, 4, 1, "", "list_files_in_remote_folder"], [6, 4, 1, "", "sanitize_artifactory_url"], [6, 4, 1, "", "translate_to_reference_design_name"]], "nebula.downloader.downloader": [[6, 2, 1, "", "check"], [6, 2, 1, "", "download"], [6, 2, 1, "", "download_boot_files"], [6, 2, 1, "", "download_sdcard_release"], [6, 2, 1, "", "extract"], [6, 2, 1, "", "releases"], [6, 2, 1, "", "retry_session"]], "nebula.driver": [[7, 1, 1, "", "driver"]], "nebula.driver.driver": [[7, 2, 1, "", "check_iio_context"], [7, 2, 1, "", "check_iio_devices"], [7, 2, 1, "", "run_all_checks"]], "nebula.errors": [[8, 5, 1, "", "Error"], [8, 5, 1, "", "LinuxNotFunctionalAfterBootFileUpdate"], [8, 5, 1, "", "LinuxNotReached"], [8, 5, 1, "", "MultiDevFound"], [8, 5, 1, "", "NetworkNotFunctional"], [8, 5, 1, "", "NetworkNotFunctionalAfterBootFileUpdate"], [8, 5, 1, "", "PingFailedAfterReboot"], [8, 5, 1, "", "SSHError"], [8, 5, 1, "", "SSHNotFunctionalAfterBootFileUpdate"], [8, 5, 1, "", "UbootNotReached"]], "nebula.helper": [[9, 4, 1, "", "convert_address_to_tty"], [9, 4, 1, "", "convert_by_id_to_tty"], [9, 4, 1, "", "get_nics"], [9, 4, 1, "", "get_uarts"], [9, 1, 1, "", "helper"], [9, 4, 1, "", "project_filter"]], "nebula.helper.helper": [[9, 2, 1, "", "create_config_from_netbox"], [9, 2, 1, "", "create_config_interactive"], [9, 2, 1, "", "get_boot_files_from_descriptor"], [9, 2, 1, "", "list_supported_boards"], [9, 2, 1, "", "update_yaml"]], "nebula.jtag": [[10, 1, 1, "", "jtag"]], "nebula.jtag.jtag": [[10, 2, 1, "", "boot_to_uboot"], [10, 2, 1, "", "full_boot"], [10, 2, 1, "", "load_post_uboot_files"], [10, 2, 1, "", "restart_board"], [10, 2, 1, "", "run_xsdb"], [10, 2, 1, "", "target_set_str"], [10, 2, 1, "", "tcl_errors_recover"]], "nebula.manager": [[12, 1, 1, "", "manager"]], "nebula.manager.manager": [[12, 2, 1, "", "board_reboot"], [12, 2, 1, "", "board_reboot_auto"], [12, 2, 1, "", "board_reboot_auto_folder"], [12, 2, 1, "", "board_reboot_jtag_uart"], [12, 2, 1, "", "board_reboot_sdmux_pdu"], [12, 2, 1, "", "board_reboot_uart_net_pdu"], [12, 2, 1, "", "copy_reference_from_sdcard"], [12, 2, 1, "", "get_status"], [12, 2, 1, "", "load_boot_bin"], [12, 2, 1, "", "network_check"], [12, 2, 1, "", "power_cycle_to_boot"], [12, 2, 1, "", "recover_board"], [12, 2, 1, "", "run_test"], [12, 2, 1, "", "shutdown_powerdown_board"], [12, 2, 1, "", "verify_checksum"]], "nebula.netbox": [[13, 1, 1, "", "NetboxDevice"], [13, 1, 1, "", "NetboxDevices"], [13, 4, 1, "", "ddepth"], [13, 1, 1, "", "netbox"], [13, 4, 1, "", "obj_dic"], [13, 4, 1, "", "todict"]], "nebula.netbox.NetboxDevice": [[13, 2, 1, "", "disable"], [13, 2, 1, "", "enable"], [13, 2, 1, "", "status"], [13, 2, 1, "", "to_config"], [13, 2, 1, "", "write_journal"]], "nebula.netbox.NetboxDevices": [[13, 2, 1, "", "generate_config"], [13, 2, 1, "", "get_devices_names"]], "nebula.netbox.netbox": [[13, 2, 1, "", "add_tag"], [13, 2, 1, "", "get_chidren_devices"], [13, 2, 1, "", "get_clusters"], [13, 2, 1, "", "get_console_ports"], [13, 2, 1, "", "get_device"], [13, 2, 1, "", "get_device_bays"], [13, 2, 1, "", "get_device_roles"], [13, 2, 1, "", "get_device_types"], [13, 2, 1, "", "get_devices"], [13, 2, 1, "", "get_devices_name"], [13, 2, 1, "", "get_interfaces"], [13, 2, 1, "", "get_inventory_items"], [13, 2, 1, "", "get_ip_addresses"], [13, 2, 1, "", "get_mac_from_asset_tag"], [13, 2, 1, "", "get_parent_devices"], [13, 2, 1, "", "get_power_outlets"], [13, 2, 1, "", "get_power_ports"], [13, 2, 1, "", "get_status"], [13, 2, 1, "", "get_tag"], [13, 2, 1, "", "get_user_from_token"], [13, 2, 1, "", "interface"], [13, 2, 1, "", "log_journal"], [13, 2, 1, "", "remove_tag"], [13, 2, 1, "", "update_device"], [13, 2, 1, "", "update_status"]], "nebula.netconsole": [[14, 1, 1, "", "netconsole"]], "nebula.netconsole.netconsole": [[14, 2, 1, "", "listen"], [14, 2, 1, "", "start_log"], [14, 2, 1, "", "stop_log"]], "nebula.network": [[15, 1, 1, "", "network"]], "nebula.network.network": [[15, 2, 1, "", "check_board_booted"], [15, 2, 1, "", "check_dmesg"], [15, 2, 1, "", "check_ssh"], [15, 2, 1, "", "copy_file_to_remote"], [15, 2, 1, "", "ping_board"], [15, 2, 1, "", "reboot_board"], [15, 2, 1, "", "run_diagnostics"], [15, 2, 1, "", "run_ssh_command"], [15, 2, 1, "", "update_boot_partition"], [15, 2, 1, "", "update_boot_partition_existing_files"], [15, 2, 1, "", "verify_checksum"]], "nebula.pdu": [[16, 1, 1, "", "pdu"]], "nebula.pdu.pdu": [[16, 2, 1, "", "power_cycle_board"], [16, 2, 1, "", "power_down_board"], [16, 2, 1, "", "power_up_board"]], "nebula.tasks": [[17, 1, 1, "", "MyFilter"], [17, 4, 1, "", "load_yaml"]], "nebula.tasks.MyFilter": [[17, 2, 1, "", "filter"]], "nebula.tftpboot": [[18, 1, 1, "", "tftpboot"]], "nebula.tftpboot.tftpboot": [[18, 2, 1, "", "check_service"], [18, 2, 1, "", "start_service"], [18, 2, 1, "", "update_boot_files"]], "nebula.uart": [[19, 4, 1, "", "escape_ansi"], [19, 1, 1, "", "uart"]], "nebula.uart.uart": [[19, 2, 1, "", "boot"], [19, 2, 1, "", "copy_reference"], [19, 2, 1, "", "get_ip_address"], [19, 2, 1, "", "get_local_mac_usbdev"], [19, 2, 1, "", "get_uart_boot_message"], [19, 2, 1, "", "get_uart_command_for_linux"], [19, 2, 1, "", "is_open"], [19, 2, 1, "", "load_system_uart"], [19, 2, 1, "", "load_system_uart_copy_to_sdcard"], [19, 2, 1, "", "load_system_uart_from_tftp"], [19, 2, 1, "", "pipe_to_log_file"], [19, 2, 1, "", "reinitialize_uart"], [19, 2, 1, "", "request_ip_dhcp"], [19, 2, 1, "", "set_ip_static"], [19, 2, 1, "", "start_log"], [19, 2, 1, "", "stop_log"], [19, 2, 1, "", "update_boot_args"], [19, 2, 1, "", "update_boot_files_from_running"], [19, 2, 1, "", "update_dev_tree"], [19, 2, 1, "", "update_fpga"], [19, 2, 1, "", "update_kernel"]], "nebula.usbdev": [[20, 1, 1, "", "usbdev"]], "nebula.usbdev.usbdev": [[20, 2, 1, "", "shell_out2"], [20, 2, 1, "", "update_firmware"], [20, 2, 1, "", "wait_for_usb_mount"]], "nebula.usbmux": [[21, 1, 1, "", "usbmux"]], "nebula.usbmux.usbmux": [[21, 2, 1, "", "backup_files_to_external"], [21, 2, 1, "", "find_mux_device"], [21, 2, 1, "", "find_muxed_sdcard"], [21, 2, 1, "", "get_mux_mode"], [21, 3, 1, "", "search_path"], [21, 2, 1, "", "set_mux_mode"], [21, 3, 1, "", "target_mux"], [21, 2, 1, "", "update_boot_files_from_external"], [21, 2, 1, "", "update_boot_files_from_sdcard_itself"], [21, 2, 1, "", "update_devicetree_for_mux"], [21, 2, 1, "", "update_rootfs_files_from_external"], [21, 2, 1, "", "write_img_file_to_sdcard"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"command": 0, "line": 0, "top": 0, "level": 0, "manag": [0, 12, 24], "uart": [0, 19], "network": [0, 15], "download": [0, 6], "pdu": [0, 16], "jtag": [0, 10], "info": 0, "driver": [0, 7, 28], "nebula": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26], "packag": 1, "submodul": 1, "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "content": [1, 22, 26, 29], "builder": 2, "common": 3, "coverag": [4, 23], "cyberpow": 5, "error": 8, "helper": 9, "main": 11, "netbox": 13, "netconsol": 14, "task": 17, "tftpboot": 18, "attribut": 19, "usbdev": 20, "usbmux": 21, "exampl": 22, "kernel": 23, "test": [23, 28, 29, 30], "build": 23, "collect": 23, "log": 23, "gener": [23, 31], "html": 23, "report": 23, "us": 24, "boot": 24, "flow": 24, "hardwar": 25, "specif": 25, "configur": [25, 31], "usb": 25, "sd": 25, "mux": 25, "from": 25, "linux": 25, "autom": 25, "prepar": 25, "host": 25, "system": [25, 30], "special": 25, "dut": 25, "set": 25, "xilinx": 25, "carrier": 25, "welcom": 26, "": 26, "document": 26, "indic": 26, "tabl": 26, "pytest": 27, "built": 29, "In": 29, "oper": 30}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 58}, "alltitles": {"Command-Line": [[0, "command-line"]], "Top-Level": [[0, "top-level"]], "MANAGER": [[0, "manager"]], "UART": [[0, "uart"]], "NETWORK": [[0, "network"]], "DOWNLOADER": [[0, "downloader"]], "PDU": [[0, "pdu"]], "JTAG": [[0, "jtag"]], "INFO": [[0, "info"]], "DRIVER": [[0, "driver"]], "nebula package": [[1, "nebula-package"]], "Submodules": [[1, "submodules"]], "Module contents": [[1, "module-nebula"]], "nebula.builder module": [[2, "module-nebula.builder"]], "nebula.common module": [[3, "module-nebula.common"]], "nebula.coverage module": [[4, "module-nebula.coverage"]], "nebula.cyberpower module": [[5, "module-nebula.cyberpower"]], "nebula.downloader module": [[6, "module-nebula.downloader"]], "nebula.driver module": [[7, "module-nebula.driver"]], "nebula.errors module": [[8, "module-nebula.errors"]], "nebula.helper module": [[9, "module-nebula.helper"]], "nebula.jtag module": [[10, "module-nebula.jtag"]], "nebula.main module": [[11, "module-nebula.main"]], "nebula.manager module": [[12, "module-nebula.manager"]], "nebula.netbox module": [[13, "module-nebula.netbox"]], "nebula.netconsole module": [[14, "module-nebula.netconsole"]], "nebula.network module": [[15, "module-nebula.network"]], "nebula.pdu module": [[16, "module-nebula.pdu"]], "nebula.tasks module": [[17, "module-nebula.tasks"]], "nebula.tftpboot module": [[18, "module-nebula.tftpboot"]], "nebula.uart module": [[19, "module-nebula.uart"]], "Attributes": [[19, "attributes"]], "nebula.usbdev module": [[20, "module-nebula.usbdev"]], "usbmux": [[21, "module-nebula.usbmux"]], "Examples": [[22, "examples"]], "Contents:": [[22, null], [26, null], [29, null]], "Kernel Coverage Testing": [[23, "kernel-coverage-testing"]], "Building the kernel": [[23, "building-the-kernel"]], "Collecting logs and generating HTML reports": [[23, "collecting-logs-and-generating-html-reports"]], "Managers": [[24, "managers"]], "Using Managers": [[24, "using-managers"]], "Boot Flow": [[24, "boot-flow"]], "Hardware Specific Configurations": [[25, "hardware-specific-configurations"]], "USB-SD-Mux from Linux Automation": [[25, "usb-sd-mux-from-linux-automation"]], "Preparing host system": [[25, "preparing-host-system"]], "Special DUT Specific Settings": [[25, "special-dut-specific-settings"]], "Xilinx Carriers": [[25, "xilinx-carriers"]], "Welcome to nebula\u2019s documentation!": [[26, "welcome-to-nebula-s-documentation"]], "Indices and tables": [[26, "indices-and-tables"]], "pytest": [[27, "pytest"]], "Driver Tests": [[28, "driver-tests"]], "Built-In Tests": [[29, "built-in-tests"]], "Operating System Tests": [[30, "operating-system-tests"]], "Configuration": [[31, "configuration"]], "Generation": [[31, "generation"]]}, "indexentries": {"module": [[1, "module-nebula"], [2, "module-nebula.builder"], [3, "module-nebula.common"], [4, "module-nebula.coverage"], [5, "module-nebula.cyberpower"], [6, "module-nebula.downloader"], [7, "module-nebula.driver"], [8, "module-nebula.errors"], [9, "module-nebula.helper"], [10, "module-nebula.jtag"], [11, "module-nebula.main"], [12, "module-nebula.manager"], [13, "module-nebula.netbox"], [14, "module-nebula.netconsole"], [15, "module-nebula.network"], [16, "module-nebula.pdu"], [17, "module-nebula.tasks"], [18, "module-nebula.tftpboot"], [19, "module-nebula.uart"], [20, "module-nebula.usbdev"], [21, "module-nebula.usbmux"]], "nebula": [[1, "module-nebula"]], "add_vivado_path() (nebula.builder.builder method)": [[2, "nebula.builder.builder.add_vivado_path"]], "analog_build_bootbin() (nebula.builder.builder method)": [[2, "nebula.builder.builder.analog_build_bootbin"]], "analog_clone() (nebula.builder.builder method)": [[2, "nebula.builder.builder.analog_clone"]], "analog_clone_build() (nebula.builder.builder method)": [[2, "nebula.builder.builder.analog_clone_build"]], "build_atf() (nebula.builder.builder method)": [[2, "nebula.builder.builder.build_atf"]], "build_bootbin() (nebula.builder.builder method)": [[2, "nebula.builder.builder.build_bootbin"]], "build_fsbl() (nebula.builder.builder method)": [[2, "nebula.builder.builder.build_fsbl"]], "build_pmufw() (nebula.builder.builder method)": [[2, "nebula.builder.builder.build_pmufw"]], "build_repo() (nebula.builder.builder method)": [[2, "nebula.builder.builder.build_repo"]], "build_zmp_fsbl() (nebula.builder.builder method)": [[2, "nebula.builder.builder.build_zmp_fsbl"]], "builder (class in nebula.builder)": [[2, "nebula.builder.builder"]], "cmake_build() (nebula.builder.builder method)": [[2, "nebula.builder.builder.cmake_build"]], "create_fsbl_project() (nebula.builder.builder method)": [[2, "nebula.builder.builder.create_fsbl_project"]], "create_pmufw_project() (nebula.builder.builder method)": [[2, "nebula.builder.builder.create_pmufw_project"]], "create_zmp_fsbl_project() (nebula.builder.builder method)": [[2, "nebula.builder.builder.create_zmp_fsbl_project"]], "create_zynq_bif() (nebula.builder.builder method)": [[2, "nebula.builder.builder.create_zynq_bif"]], "create_zynqmp_bif() (nebula.builder.builder method)": [[2, "nebula.builder.builder.create_zynqmp_bif"]], "def_config_map() (nebula.builder.builder method)": [[2, "nebula.builder.builder.def_config_map"]], "hdl_build() (nebula.builder.builder method)": [[2, "nebula.builder.builder.hdl_build"]], "linux_build() (nebula.builder.builder method)": [[2, "nebula.builder.builder.linux_build"]], "linux_tools_map() (nebula.builder.builder method)": [[2, "nebula.builder.builder.linux_tools_map"]], "nebula.builder": [[2, "module-nebula.builder"]], "shell_out() (nebula.builder.builder method)": [[2, "nebula.builder.builder.shell_out"]], "shell_out2() (nebula.builder.builder method)": [[2, "nebula.builder.builder.shell_out2"]], "uboot_build() (nebula.builder.builder method)": [[2, "nebula.builder.builder.uboot_build"]], "vivado_override (nebula.builder.builder attribute)": [[2, "nebula.builder.builder.vivado_override"]], "multi_device_check() (in module nebula.common)": [[3, "nebula.common.multi_device_check"]], "nebula.common": [[3, "module-nebula.common"]], "update_defaults_from_yaml() (nebula.common.utils method)": [[3, "nebula.common.utils.update_defaults_from_yaml"]], "utils (class in nebula.common)": [[3, "nebula.common.utils"]], "collect_gcov_trackers() (nebula.coverage.coverage method)": [[4, "nebula.coverage.coverage.collect_gcov_trackers"]], "coverage (class in nebula.coverage)": [[4, "nebula.coverage.coverage"]], "gen_lcov_html_report() (nebula.coverage.coverage method)": [[4, "nebula.coverage.coverage.gen_lcov_html_report"]], "nebula.coverage": [[4, "module-nebula.coverage"]], "cyberpowerpdu (class in nebula.cyberpower)": [[5, "nebula.cyberpower.CyberPowerPdu"]], "cyberpowerpduexception": [[5, "nebula.cyberpower.CyberPowerPduException"]], "nebula.cyberpower": [[5, "module-nebula.cyberpower"]], "outlet_state_oids (nebula.cyberpower.cyberpowerpdu attribute)": [[5, "nebula.cyberpower.CyberPowerPdu.outlet_state_oids"]], "set_outlet_on() (nebula.cyberpower.cyberpowerpdu method)": [[5, "nebula.cyberpower.CyberPowerPdu.set_outlet_on"]], "check() (nebula.downloader.downloader method)": [[6, "nebula.downloader.downloader.check"]], "convert_to_datetime() (in module nebula.downloader)": [[6, "nebula.downloader.convert_to_datetime"]], "download() (nebula.downloader.downloader method)": [[6, "nebula.downloader.downloader.download"]], "download_artifact() (in module nebula.downloader)": [[6, "nebula.downloader.download_artifact"]], "download_boot_files() (nebula.downloader.downloader method)": [[6, "nebula.downloader.downloader.download_boot_files"]], "download_matlab_generate_bootbin() (in module nebula.downloader)": [[6, "nebula.downloader.download_matlab_generate_bootbin"]], "download_sdcard_release() (nebula.downloader.downloader method)": [[6, "nebula.downloader.downloader.download_sdcard_release"]], "downloader (class in nebula.downloader)": [[6, "nebula.downloader.downloader"]], "extract() (nebula.downloader.downloader method)": [[6, "nebula.downloader.downloader.extract"]], "filter_boards() (in module nebula.downloader)": [[6, "nebula.downloader.filter_boards"]], "gen_url() (in module nebula.downloader)": [[6, "nebula.downloader.gen_url"]], "generate_bootbin_map_file() (in module nebula.downloader)": [[6, "nebula.downloader.generate_bootbin_map_file"]], "get_artifact_paths() (in module nebula.downloader)": [[6, "nebula.downloader.get_artifact_paths"]], "get_firmware_version() (in module nebula.downloader)": [[6, "nebula.downloader.get_firmware_version"]], "get_gitsha() (in module nebula.downloader)": [[6, "nebula.downloader.get_gitsha"]], "get_info_txt() (in module nebula.downloader)": [[6, "nebula.downloader.get_info_txt"]], "get_latest_release() (in module nebula.downloader)": [[6, "nebula.downloader.get_latest_release"]], "get_newest_folder() (in module nebula.downloader)": [[6, "nebula.downloader.get_newest_folder"]], "interpret_bootbin() (in module nebula.downloader)": [[6, "nebula.downloader.interpret_bootbin"]], "listfd() (in module nebula.downloader)": [[6, "nebula.downloader.listFD"]], "list_files_in_remote_folder() (in module nebula.downloader)": [[6, "nebula.downloader.list_files_in_remote_folder"]], "nebula.downloader": [[6, "module-nebula.downloader"]], "releases() (nebula.downloader.downloader method)": [[6, "nebula.downloader.downloader.releases"]], "retry_session() (nebula.downloader.downloader method)": [[6, "nebula.downloader.downloader.retry_session"]], "sanitize_artifactory_url() (in module nebula.downloader)": [[6, "nebula.downloader.sanitize_artifactory_url"]], "translate_to_reference_design_name() (in module nebula.downloader)": [[6, "nebula.downloader.translate_to_reference_design_name"]], "check_iio_context() (nebula.driver.driver method)": [[7, "nebula.driver.driver.check_iio_context"]], "check_iio_devices() (nebula.driver.driver method)": [[7, "nebula.driver.driver.check_iio_devices"]], "driver (class in nebula.driver)": [[7, "nebula.driver.driver"]], "nebula.driver": [[7, "module-nebula.driver"]], "run_all_checks() (nebula.driver.driver method)": [[7, "nebula.driver.driver.run_all_checks"]], "error": [[8, "nebula.errors.Error"]], "linuxnotfunctionalafterbootfileupdate": [[8, "nebula.errors.LinuxNotFunctionalAfterBootFileUpdate"]], "linuxnotreached": [[8, "nebula.errors.LinuxNotReached"]], "multidevfound": [[8, "nebula.errors.MultiDevFound"]], "networknotfunctional": [[8, "nebula.errors.NetworkNotFunctional"]], "networknotfunctionalafterbootfileupdate": [[8, "nebula.errors.NetworkNotFunctionalAfterBootFileUpdate"]], "pingfailedafterreboot": [[8, "nebula.errors.PingFailedAfterReboot"]], "ssherror": [[8, "nebula.errors.SSHError"]], "sshnotfunctionalafterbootfileupdate": [[8, "nebula.errors.SSHNotFunctionalAfterBootFileUpdate"]], "ubootnotreached": [[8, "nebula.errors.UbootNotReached"]], "nebula.errors": [[8, "module-nebula.errors"]], "convert_address_to_tty() (in module nebula.helper)": [[9, "nebula.helper.convert_address_to_tty"]], "convert_by_id_to_tty() (in module nebula.helper)": [[9, "nebula.helper.convert_by_id_to_tty"]], "create_config_from_netbox() (nebula.helper.helper method)": [[9, "nebula.helper.helper.create_config_from_netbox"]], "create_config_interactive() (nebula.helper.helper method)": [[9, "nebula.helper.helper.create_config_interactive"]], "get_boot_files_from_descriptor() (nebula.helper.helper method)": [[9, "nebula.helper.helper.get_boot_files_from_descriptor"]], "get_nics() (in module nebula.helper)": [[9, "nebula.helper.get_nics"]], "get_uarts() (in module nebula.helper)": [[9, "nebula.helper.get_uarts"]], "helper (class in nebula.helper)": [[9, "nebula.helper.helper"]], "list_supported_boards() (nebula.helper.helper method)": [[9, "nebula.helper.helper.list_supported_boards"]], "nebula.helper": [[9, "module-nebula.helper"]], "project_filter() (in module nebula.helper)": [[9, "nebula.helper.project_filter"]], "update_yaml() (nebula.helper.helper method)": [[9, "nebula.helper.helper.update_yaml"]], "boot_to_uboot() (nebula.jtag.jtag method)": [[10, "nebula.jtag.jtag.boot_to_uboot"]], "full_boot() (nebula.jtag.jtag method)": [[10, "nebula.jtag.jtag.full_boot"]], "jtag (class in nebula.jtag)": [[10, "nebula.jtag.jtag"]], "load_post_uboot_files() (nebula.jtag.jtag method)": [[10, "nebula.jtag.jtag.load_post_uboot_files"]], "nebula.jtag": [[10, "module-nebula.jtag"]], "restart_board() (nebula.jtag.jtag method)": [[10, "nebula.jtag.jtag.restart_board"]], "run_xsdb() (nebula.jtag.jtag method)": [[10, "nebula.jtag.jtag.run_xsdb"]], "target_set_str() (nebula.jtag.jtag method)": [[10, "nebula.jtag.jtag.target_set_str"]], "tcl_errors_recover() (nebula.jtag.jtag method)": [[10, "nebula.jtag.jtag.tcl_errors_recover"]], "nebula.main": [[11, "module-nebula.main"]], "board_reboot() (nebula.manager.manager method)": [[12, "nebula.manager.manager.board_reboot"]], "board_reboot_auto() (nebula.manager.manager method)": [[12, "nebula.manager.manager.board_reboot_auto"]], "board_reboot_auto_folder() (nebula.manager.manager method)": [[12, "nebula.manager.manager.board_reboot_auto_folder"]], "board_reboot_jtag_uart() (nebula.manager.manager method)": [[12, "nebula.manager.manager.board_reboot_jtag_uart"]], "board_reboot_sdmux_pdu() (nebula.manager.manager method)": [[12, "nebula.manager.manager.board_reboot_sdmux_pdu"]], "board_reboot_uart_net_pdu() (nebula.manager.manager method)": [[12, "nebula.manager.manager.board_reboot_uart_net_pdu"]], "copy_reference_from_sdcard() (nebula.manager.manager method)": [[12, "nebula.manager.manager.copy_reference_from_sdcard"]], "get_status() (nebula.manager.manager method)": [[12, "nebula.manager.manager.get_status"]], "load_boot_bin() (nebula.manager.manager method)": [[12, "nebula.manager.manager.load_boot_bin"]], "manager (class in nebula.manager)": [[12, "nebula.manager.manager"]], "nebula.manager": [[12, "module-nebula.manager"]], "network_check() (nebula.manager.manager method)": [[12, "nebula.manager.manager.network_check"]], "power_cycle_to_boot() (nebula.manager.manager method)": [[12, "nebula.manager.manager.power_cycle_to_boot"]], "recover_board() (nebula.manager.manager method)": [[12, "nebula.manager.manager.recover_board"]], "run_test() (nebula.manager.manager method)": [[12, "nebula.manager.manager.run_test"]], "shutdown_powerdown_board() (nebula.manager.manager method)": [[12, "nebula.manager.manager.shutdown_powerdown_board"]], "verify_checksum() (nebula.manager.manager method)": [[12, "nebula.manager.manager.verify_checksum"]], "netboxdevice (class in nebula.netbox)": [[13, "nebula.netbox.NetboxDevice"]], "netboxdevices (class in nebula.netbox)": [[13, "nebula.netbox.NetboxDevices"]], "add_tag() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.add_tag"]], "ddepth() (in module nebula.netbox)": [[13, "nebula.netbox.ddepth"]], "disable() (nebula.netbox.netboxdevice method)": [[13, "nebula.netbox.NetboxDevice.disable"]], "enable() (nebula.netbox.netboxdevice method)": [[13, "nebula.netbox.NetboxDevice.enable"]], "generate_config() (nebula.netbox.netboxdevices method)": [[13, "nebula.netbox.NetboxDevices.generate_config"]], "get_chidren_devices() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_chidren_devices"]], "get_clusters() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_clusters"]], "get_console_ports() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_console_ports"]], "get_device() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_device"]], "get_device_bays() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_device_bays"]], "get_device_roles() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_device_roles"]], "get_device_types() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_device_types"]], "get_devices() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_devices"]], "get_devices_name() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_devices_name"]], "get_devices_names() (nebula.netbox.netboxdevices method)": [[13, "nebula.netbox.NetboxDevices.get_devices_names"]], "get_interfaces() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_interfaces"]], "get_inventory_items() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_inventory_items"]], "get_ip_addresses() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_ip_addresses"]], "get_mac_from_asset_tag() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_mac_from_asset_tag"]], "get_parent_devices() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_parent_devices"]], "get_power_outlets() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_power_outlets"]], "get_power_ports() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_power_ports"]], "get_status() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_status"]], "get_tag() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_tag"]], "get_user_from_token() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.get_user_from_token"]], "interface() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.interface"]], "log_journal() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.log_journal"]], "nebula.netbox": [[13, "module-nebula.netbox"]], "netbox (class in nebula.netbox)": [[13, "nebula.netbox.netbox"]], "obj_dic() (in module nebula.netbox)": [[13, "nebula.netbox.obj_dic"]], "remove_tag() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.remove_tag"]], "status() (nebula.netbox.netboxdevice method)": [[13, "nebula.netbox.NetboxDevice.status"]], "to_config() (nebula.netbox.netboxdevice method)": [[13, "nebula.netbox.NetboxDevice.to_config"]], "todict() (in module nebula.netbox)": [[13, "nebula.netbox.todict"]], "update_device() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.update_device"]], "update_status() (nebula.netbox.netbox method)": [[13, "nebula.netbox.netbox.update_status"]], "write_journal() (nebula.netbox.netboxdevice method)": [[13, "nebula.netbox.NetboxDevice.write_journal"]], "listen() (nebula.netconsole.netconsole method)": [[14, "nebula.netconsole.netconsole.listen"]], "nebula.netconsole": [[14, "module-nebula.netconsole"]], "netconsole (class in nebula.netconsole)": [[14, "nebula.netconsole.netconsole"]], "start_log() (nebula.netconsole.netconsole method)": [[14, "nebula.netconsole.netconsole.start_log"]], "stop_log() (nebula.netconsole.netconsole method)": [[14, "nebula.netconsole.netconsole.stop_log"]], "check_board_booted() (nebula.network.network method)": [[15, "nebula.network.network.check_board_booted"]], "check_dmesg() (nebula.network.network method)": [[15, "nebula.network.network.check_dmesg"]], "check_ssh() (nebula.network.network method)": [[15, "nebula.network.network.check_ssh"]], "copy_file_to_remote() (nebula.network.network method)": [[15, "nebula.network.network.copy_file_to_remote"]], "nebula.network": [[15, "module-nebula.network"]], "network (class in nebula.network)": [[15, "nebula.network.network"]], "ping_board() (nebula.network.network method)": [[15, "nebula.network.network.ping_board"]], "reboot_board() (nebula.network.network method)": [[15, "nebula.network.network.reboot_board"]], "run_diagnostics() (nebula.network.network method)": [[15, "nebula.network.network.run_diagnostics"]], "run_ssh_command() (nebula.network.network method)": [[15, "nebula.network.network.run_ssh_command"]], "update_boot_partition() (nebula.network.network method)": [[15, "nebula.network.network.update_boot_partition"]], "update_boot_partition_existing_files() (nebula.network.network method)": [[15, "nebula.network.network.update_boot_partition_existing_files"]], "verify_checksum() (nebula.network.network method)": [[15, "nebula.network.network.verify_checksum"]], "nebula.pdu": [[16, "module-nebula.pdu"]], "pdu (class in nebula.pdu)": [[16, "nebula.pdu.pdu"]], "power_cycle_board() (nebula.pdu.pdu method)": [[16, "nebula.pdu.pdu.power_cycle_board"]], "power_down_board() (nebula.pdu.pdu method)": [[16, "nebula.pdu.pdu.power_down_board"]], "power_up_board() (nebula.pdu.pdu method)": [[16, "nebula.pdu.pdu.power_up_board"]], "myfilter (class in nebula.tasks)": [[17, "nebula.tasks.MyFilter"]], "filter() (nebula.tasks.myfilter method)": [[17, "nebula.tasks.MyFilter.filter"]], "load_yaml() (in module nebula.tasks)": [[17, "nebula.tasks.load_yaml"]], "nebula.tasks": [[17, "module-nebula.tasks"]], "check_service() (nebula.tftpboot.tftpboot method)": [[18, "nebula.tftpboot.tftpboot.check_service"]], "nebula.tftpboot": [[18, "module-nebula.tftpboot"]], "start_service() (nebula.tftpboot.tftpboot method)": [[18, "nebula.tftpboot.tftpboot.start_service"]], "tftpboot (class in nebula.tftpboot)": [[18, "nebula.tftpboot.tftpboot"]], "update_boot_files() (nebula.tftpboot.tftpboot method)": [[18, "nebula.tftpboot.tftpboot.update_boot_files"]], "boot() (nebula.uart.uart method)": [[19, "nebula.uart.uart.boot"]], "copy_reference() (nebula.uart.uart method)": [[19, "nebula.uart.uart.copy_reference"]], "escape_ansi() (in module nebula.uart)": [[19, "nebula.uart.escape_ansi"]], "get_ip_address() (nebula.uart.uart method)": [[19, "nebula.uart.uart.get_ip_address"]], "get_local_mac_usbdev() (nebula.uart.uart method)": [[19, "nebula.uart.uart.get_local_mac_usbdev"]], "get_uart_boot_message() (nebula.uart.uart method)": [[19, "nebula.uart.uart.get_uart_boot_message"]], "get_uart_command_for_linux() (nebula.uart.uart method)": [[19, "nebula.uart.uart.get_uart_command_for_linux"]], "is_open() (nebula.uart.uart method)": [[19, "nebula.uart.uart.is_open"]], "load_system_uart() (nebula.uart.uart method)": [[19, "nebula.uart.uart.load_system_uart"]], "load_system_uart_copy_to_sdcard() (nebula.uart.uart method)": [[19, "nebula.uart.uart.load_system_uart_copy_to_sdcard"]], "load_system_uart_from_tftp() (nebula.uart.uart method)": [[19, "nebula.uart.uart.load_system_uart_from_tftp"]], "nebula.uart": [[19, "module-nebula.uart"]], "pipe_to_log_file() (nebula.uart.uart method)": [[19, "nebula.uart.uart.pipe_to_log_file"]], "reinitialize_uart() (nebula.uart.uart method)": [[19, "nebula.uart.uart.reinitialize_uart"]], "request_ip_dhcp() (nebula.uart.uart method)": [[19, "nebula.uart.uart.request_ip_dhcp"]], "set_ip_static() (nebula.uart.uart method)": [[19, "nebula.uart.uart.set_ip_static"]], "start_log() (nebula.uart.uart method)": [[19, "nebula.uart.uart.start_log"]], "stop_log() (nebula.uart.uart method)": [[19, "nebula.uart.uart.stop_log"]], "uart (class in nebula.uart)": [[19, "nebula.uart.uart"]], "update_boot_args() (nebula.uart.uart method)": [[19, "nebula.uart.uart.update_boot_args"]], "update_boot_files_from_running() (nebula.uart.uart method)": [[19, "nebula.uart.uart.update_boot_files_from_running"]], "update_dev_tree() (nebula.uart.uart method)": [[19, "nebula.uart.uart.update_dev_tree"]], "update_fpga() (nebula.uart.uart method)": [[19, "nebula.uart.uart.update_fpga"]], "update_kernel() (nebula.uart.uart method)": [[19, "nebula.uart.uart.update_kernel"]], "nebula.usbdev": [[20, "module-nebula.usbdev"]], "shell_out2() (nebula.usbdev.usbdev method)": [[20, "nebula.usbdev.usbdev.shell_out2"]], "update_firmware() (nebula.usbdev.usbdev method)": [[20, "nebula.usbdev.usbdev.update_firmware"]], "usbdev (class in nebula.usbdev)": [[20, "nebula.usbdev.usbdev"]], "wait_for_usb_mount() (nebula.usbdev.usbdev method)": [[20, "nebula.usbdev.usbdev.wait_for_usb_mount"]], "backup_files_to_external() (nebula.usbmux.usbmux method)": [[21, "nebula.usbmux.usbmux.backup_files_to_external"]], "find_mux_device() (nebula.usbmux.usbmux method)": [[21, "nebula.usbmux.usbmux.find_mux_device"]], "find_muxed_sdcard() (nebula.usbmux.usbmux method)": [[21, "nebula.usbmux.usbmux.find_muxed_sdcard"]], "get_mux_mode() (nebula.usbmux.usbmux method)": [[21, "nebula.usbmux.usbmux.get_mux_mode"]], "nebula.usbmux": [[21, "module-nebula.usbmux"]], "search_path (nebula.usbmux.usbmux attribute)": [[21, "nebula.usbmux.usbmux.search_path"]], "set_mux_mode() (nebula.usbmux.usbmux method)": [[21, "nebula.usbmux.usbmux.set_mux_mode"]], "target_mux (nebula.usbmux.usbmux attribute)": [[21, "nebula.usbmux.usbmux.target_mux"]], "update_boot_files_from_external() (nebula.usbmux.usbmux method)": [[21, "nebula.usbmux.usbmux.update_boot_files_from_external"]], "update_boot_files_from_sdcard_itself() (nebula.usbmux.usbmux method)": [[21, "nebula.usbmux.usbmux.update_boot_files_from_sdcard_itself"]], "update_devicetree_for_mux() (nebula.usbmux.usbmux method)": [[21, "nebula.usbmux.usbmux.update_devicetree_for_mux"]], "update_rootfs_files_from_external() (nebula.usbmux.usbmux method)": [[21, "nebula.usbmux.usbmux.update_rootfs_files_from_external"]], "usbmux (class in nebula.usbmux)": [[21, "nebula.usbmux.usbmux"]], "write_img_file_to_sdcard() (nebula.usbmux.usbmux method)": [[21, "nebula.usbmux.usbmux.write_img_file_to_sdcard"]]}})